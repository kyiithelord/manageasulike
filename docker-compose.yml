# Docker Compose file for Odoo (version-agnostic via .env)

services:
  db:
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_DB: odoo
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - odoo-db-data:/var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    stop_grace_period: 60s

  odoo:
    build:
      context: .
      args:
        ODOO_VERSION: ${ODOO_VERSION}
    depends_on:
      db:
        condition: service_healthy
    # Expose only longpolling internally; access Odoo through the proxy service on ${ODOO_HOST_PORT}
    ports:
      - "8072:8072"  # longpolling/websocket (bus) evented port
    volumes:
      - odoo-web-data:/var/lib/odoo
      - ./addons:/mnt/extra-addons
      - ./config:/etc/odoo
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8069/web/health >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 180s
    stop_grace_period: 60s


  proxy:
    image: nginx:alpine
    depends_on:
      odoo:
        condition: service_started
    ports:
      - "${ODOO_HOST_PORT}:8069"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8069/web/health >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

volumes:
  odoo-db-data:
  odoo-web-data:
